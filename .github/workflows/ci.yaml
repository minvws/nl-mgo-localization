name: CI

on:
    workflow_dispatch:
    pull_request:
    push:
        branches:
            - develop
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"

jobs:
    lint:
        name: Run code linter
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Lint
              run: poetry run $(make lint --just-print --silent)

    format:
        name: Run formatter
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Find format differences
              run: poetry run $(make format-diff --just-print --silent)

    type-check:
        name: Check static types
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Check static types
              run: poetry run $(make type-check --just-print --silent)

    safety-check:
        name: Scan packages for vulnerabilities
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Scan packages for vulnerabilities
              run: poetry run $(make safety-check --just-print --silent)

    spelling-check:
        name: Run spelling check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Run spelling check
              run: poetry run $(make spelling-check --just-print --silent)

    test:
        name: Run the tests
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Install dependencies
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/poetry-install@1279864d6bfc79a6ac2666846cdb00c08ab6593f
              with:
                python_version: ${{ env.PYTHON_VERSION }}

            - name: Run the tests
              env:
                  CI_ENV: 1
              run: poetry run $(make test --just-print --silent)

            - name: Upload coverage report
              uses: actions/upload-artifact@v4
              with:
                  name: coverage
                  path: coverage.xml

    sonar:
        name: SonarCloud
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Download coverage report
              uses: actions/download-artifact@v4

            - name: Run SonarCloud scanner
              uses: minvws/nl-irealisatie-generic-pipelines/.github/actions/sonarcloud@main
              with:
                  sonar-token: ${{ secrets.SONAR_TOKEN }}
